---

- name: 'Install python and python packages'
  action: apt pkg={{item}} state=installed
  with_items:
    - python
    - python-dev
    - python-pip
    - python-rpi.gpio
    - python-picamera
    - python-yaml

- name: 'Install AWSIoTPythonSDK python package'
  pip: name=AWSIoTPythonSDK executable=pip state=present

- name: 'Install paho mqtt python package'
  pip: name=paho-mqtt executable=pip state=present

- name: 'Install wiringpi2 python package'
  pip: name=wiringpi2 executable=pip state=present

- name: 'Install Adafruit DHT python package'
  pip: name=Adafruit_Python_DHT executable=pip state=present

- name: 'Install gpiozero python package'
  pip: name=gpiozero executable=pip state=present

- name: 'Install boto3 python package'
  pip: name=boto3 executable=pip state=present

- name: 'Clone/Update latest repo'
  git: repo={{ github_repo }}
      dest={{ webapps_dir }}
      accept_hostkey=yes
  become: yes
  become_user: "{{ user }}"

- name: 'Install IoT private key'
  copy: src=~/.ssh/credentials/{{ inventory_hostname }}-private.pem dest={{ creds_location }}/private.pem owner={{ user }} group={{ group }} mode=600

- name: 'Install IoT certificate'
  copy: src=~/.ssh/credentials/{{ inventory_hostname }}-certificate.pem dest={{ creds_location }}/certificate.pem owner=pi group=pi mode=600

- name: 'Install Root CA'
  copy: src=~/.ssh/credentials/rootCA.pem dest={{ creds_location }}/rootCA.pem owner={{ user }} group={{ group }} mode=600

- name: 'Configure logrotate'
  template: src=iot_logrotate.j2 dest=/etc/logrotate.d/iot owner={{ user }} group={{ group }} mode=0644
  notify:
    - force logrotate

- name: 'Create pi_monitor script'
  template: src=pi_monitor.sh.j2 dest={{ user_dir }}/pi_monitor.sh mode=0755 owner={{ user }} group={{ group }}

- name: 'Crontab entry for pi monitor'
  cron: name="pi monitor" minute="*/5" job="{{ user_dir }}/pi_monitor.sh"